---
const base = import.meta.env.BASE_URL;
---

<section class="about-inled" id="about-inled">
  <div class="about-container">
    <div class="about-content">
      <div class="about-text" data-gsap="fadeInLeft">
        <h2 class="about-title">Sobre Inled Group</h2>
        <p class="about-description">
          Inled Group es una marca de software pionera en el desarrollo con agentes de inteligencia artificial y tecnologías libres.
        </p>
        <p class="about-description">
          En Inled buscamos hacer un mundo mejor a través del software y los proyectos, de ahí nuestro lema "We make a better world"
        </p>
        <div class="about-stats">
          <div class="stat-item" data-gsap="countUp" data-count="27">
            <span class="stat-number">0</span>
            <span class="stat-label">Proyectos</span>
          </div>
          <div class="stat-item" data-gsap="countUp" data-count="2">
            <span class="stat-number">0</span>
            <span class="stat-label">Años de experiencia</span>
          </div>
          <div class="stat-item" data-gsap="countUp" data-count="100">
            <span class="stat-number">0</span>
            <span class="stat-label">% Satisfacción</span>
          </div>
        </div>
      </div>
      <div class="about-visual" data-gsap="fadeInRight">
        <div class="visual-container">
          <div class="floating-elements">
            <div class="element element-1"></div>
            <div class="element element-2"></div>
            <div class="element element-3"></div>
            <div class="element element-4"></div>
          </div>
          <div class="about-image">
            <img src={base + '/upload/cropped-INLED_simple-removebg-preview.png'} alt="Inled Group Logo" class="logo-img">
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .about-inled {
    background: #000000;
    padding: clamp(4rem, 8vw, 8rem) 0;
    position: relative;
    overflow: hidden;
  }

  .about-inled::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, #3b82f6, transparent);
    opacity: 0.6;
  }

  .about-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 clamp(1rem, 5vw, 2rem);
  }

  .about-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: clamp(3rem, 8vw, 6rem);
    align-items: center;
  }

  .about-text {
    opacity: 0;
    transform: translateX(-50px);
  }

  .about-title {
    font-size: clamp(2.5rem, 5vw, 3.5rem);
    font-weight: 700;
    color: #ffffff;
    margin-bottom: 2rem;
    line-height: 1.2;
    position: relative;
  }

  .about-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 60px;
    height: 4px;
    background: linear-gradient(90deg, #3bb4fc, #2a9de8);
    border-radius: 2px;
  }

  .about-description {
    font-size: clamp(1.1rem, 2.2vw, 1.3rem);
    line-height: 1.7;
    color: rgba(255, 255, 255, 0.85);
    margin-bottom: 1.5rem;
  }

  .about-stats {
    display: flex;
    gap: 2rem;
    margin-top: 3rem;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    display: block;
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    color: #3bb4fc;
    line-height: 1;
  }

  .stat-label {
    display: block;
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.7);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-top: 0.5rem;
  }

  .about-visual {
    opacity: 0;
    transform: translateX(50px);
    position: relative;
  }

  .visual-container {
    position: relative;
    width: 100%;
    height: 400px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .floating-elements {
    position: absolute;
    inset: 0;
  }

  .element {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(59, 180, 252, 0.2), rgba(42, 157, 232, 0.2));
    backdrop-filter: blur(10px);
    border: 1px solid rgba(59, 180, 252, 0.3);
  }

  .element-1 {
    width: 80px;
    height: 80px;
    top: 10%;
    left: 10%;
    animation: float 6s ease-in-out infinite;
  }

  .element-2 {
    width: 60px;
    height: 60px;
    top: 20%;
    right: 15%;
    animation: float 8s ease-in-out infinite reverse;
  }

  .element-3 {
    width: 100px;
    height: 100px;
    bottom: 15%;
    left: 5%;
    animation: float 7s ease-in-out infinite;
  }

  .element-4 {
    width: 40px;
    height: 40px;
    bottom: 25%;
    right: 10%;
    animation: float 9s ease-in-out infinite reverse;
  }

  .about-image {
    position: relative;
    z-index: 2;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(59, 180, 252, 0.1), transparent);
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid rgba(59, 180, 252, 0.3);
    box-shadow: 0 0 50px rgba(59, 180, 252, 0.2);
  }

  .logo-img {
    width: 120px;
    height: auto;
    filter: brightness(1.2) drop-shadow(0 0 20px rgba(59, 180, 252, 0.3));
    transition: transform 0.3s ease;
  }

  .about-image:hover .logo-img {
    transform: scale(1.1) rotate(5deg);
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    25% {
      transform: translateY(-20px) rotate(90deg);
    }
    50% {
      transform: translateY(-10px) rotate(180deg);
    }
    75% {
      transform: translateY(-30px) rotate(270deg);
    }
  }

  @media (max-width: 768px) {
    .about-content {
      grid-template-columns: 1fr;
      text-align: center;
      gap: 3rem;
    }

    .about-text {
      opacity: 1;
      transform: translateX(0);
    }

    .about-visual {
      opacity: 1;
      transform: translateX(0);
    }

    .about-stats {
      justify-content: center;
    }

    .visual-container {
      height: 300px;
    }

    .about-image {
      width: 150px;
      height: 150px;
    }

    .logo-img {
      width: 90px;
    }
  }

  @media (max-width: 480px) {
    .about-stats {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  if (typeof window !== 'undefined') {
    gsap.registerPlugin(ScrollTrigger);

    const initAboutAnimations = () => {
      const isMobile = window.innerWidth <= 768;

      if (!isMobile) {
        // Fade in left animation for text
        gsap.fromTo('[data-gsap="fadeInLeft"]', {
          opacity: 0,
          x: -50
        }, {
          opacity: 1,
          x: 0,
          duration: 1,
          ease: "power2.out",
          scrollTrigger: {
            trigger: '[data-gsap="fadeInLeft"]',
            start: "top 80%",
            toggleActions: "play none none reverse"
          }
        });

        // Fade in right animation for visual
        gsap.fromTo('[data-gsap="fadeInRight"]', {
          opacity: 0,
          x: 50
        }, {
          opacity: 1,
          x: 0,
          duration: 1,
          ease: "power2.out",
          scrollTrigger: {
            trigger: '[data-gsap="fadeInRight"]',
            start: "top 80%",
            toggleActions: "play none none reverse"
          }
        });

        // Count up animations
        document.querySelectorAll('[data-gsap="countUp"]').forEach(element => {
          const countElement = element.querySelector('.stat-number');
          const targetCount = parseInt(element.dataset.count);

          gsap.fromTo(countElement, {
            innerHTML: 0
          }, {
            innerHTML: targetCount,
            duration: 2,
            ease: "power2.out",
            snap: { innerHTML: 1 },
            scrollTrigger: {
              trigger: element,
              start: "top 80%",
              toggleActions: "play none none reverse"
            }
          });
        });
      } else {
        // En mobile, simplemente hacer visibles los elementos y establecer valores finales
        gsap.set('[data-gsap="fadeInLeft"], [data-gsap="fadeInRight"]', {
          opacity: 1,
          x: 0
        });

        // Para los contadores, establecer directamente el valor final
        document.querySelectorAll('[data-gsap="countUp"]').forEach(element => {
          const countElement = element.querySelector('.stat-number');
          const targetCount = parseInt(element.dataset.count);
          countElement.innerHTML = targetCount;
        });
      }

      // Floating elements animation
      gsap.set('.element', {
        y: gsap.utils.random(-20, 20),
        x: gsap.utils.random(-20, 20)
      });

      gsap.to('.element', {
        y: "+=30",
        duration: gsap.utils.random(4, 8),
        ease: "sine.inOut",
        repeat: -1,
        yoyo: true,
        stagger: {
          each: 0.5,
          from: "random"
        }
      });
    };

    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initAboutAnimations);
    } else {
      initAboutAnimations();
    }
  }
</script>